apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: {{.namespace}}
  name: nginx-ingress-controller
  labels:
    k8s-app: nginx-ingress-controller
spec:
  replicas: {{.replicas}}
  template:
    metadata:
      labels:
        k8s-app: nginx-ingress-controller
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
    spec:
      serviceAccountName: nginx-ingress-serviceaccount
      terminationGracePeriodSeconds: 60
      containers:
      - image: {{.ingressimage}}
        name: nginx-ingress-controller
        volumeMounts:
          - name: nginx-template
            mountPath: /etc/nginx/template
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        args:
        - /nginx-ingress-controller
        - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
        - --configmap=$(POD_NAMESPACE)/nginxsettings
        - -v=3
      initContainers:
      - name: nginx-template-rewriter
        image: {{.ingressimage}}
        volumeMounts:
          - name: nginx-template
            mountPath: /tmp/template
        args:
        - /bin/sh
        - -c
        - "echo 'include /etc/nginx/overwrite/*.conf;' >> /etc/nginx/template/nginx.tmpl && cp /etc/nginx/template/nginx.tmpl /tmp/template/ "
      volumes:
      - name: otherconf
        configMap:
          name: otherconf
      - name: nginx-template
        emptyDir: {}
